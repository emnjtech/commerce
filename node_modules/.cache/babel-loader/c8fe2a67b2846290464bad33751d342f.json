{"ast":null,"code":"import { ADD_T0_CART, DEC_QTY, INC_QTY, REMOVE_FROM_CART } from \"./commerce-action\";\nexport const commerceReducer = (state, action) => {\n  switch (action.type) {\n    case ADD_T0_CART:\n      return { ...state,\n        basket: [...state.basket, action.payload]\n      };\n\n    case REMOVE_FROM_CART:\n      const index = state.basket.findIndex(basketItem => basketItem.id === action.id);\n      let newBasket = [...state.basket];\n\n      if (index >= 0) {\n        newBasket.splice(index, 1);\n      } else {\n        console.warn(`Can't remove product(id: ${action.id}) as its not in the basket!`);\n      }\n\n      return { ...state,\n        basket: newBasket\n      };\n\n    /*     return {\n             ...state,\n             basket: state.basket.filter( item => item.id !== action.payload)\n         } */\n\n    case INC_QTY:\n      return { ...state,\n        basket: state.basket.map(item => item.id === action.payload ? { ...item,\n          qty: item.qty + 1\n        } : { ...item\n        })\n      };\n\n    case DEC_QTY:\n      return { ...state,\n        basket: state.basket.map(item => item.id === action.payload ? { ...item,\n          qty: item.qty - 1\n        } : { ...item\n        })\n      };\n\n    default:\n      return state;\n  }\n};\n/* \n            let newBasket = [...state.basket]\n\n            if (index > 0) {\n                newBasket.splice(index,1)\n \n            }\n            else {\n                alert(\"can't remove product\")\n            } \n            \n            \n             ...state,\n                basket: state.basket.filter(item => item.id !== action.payload)*/","map":{"version":3,"sources":["/Users/admin/ReactProjects/reactProject/my-app/src/context/commerce-reducer.js"],"names":["ADD_T0_CART","DEC_QTY","INC_QTY","REMOVE_FROM_CART","commerceReducer","state","action","type","basket","payload","index","findIndex","basketItem","id","newBasket","splice","console","warn","map","item","qty"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,EAA+BC,OAA/B,EAAwCC,gBAAxC,QAAgE,mBAAhE;AAKA,OAAO,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAkB;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,WAAL;AAEI,aAAO,EAEH,GAAGK,KAFA;AAEOG,QAAAA,MAAM,EAAE,CAAC,GAAGH,KAAK,CAACG,MAAV,EAAkBF,MAAM,CAACG,OAAzB;AAFf,OAAP;;AAKJ,SAAKN,gBAAL;AACI,YAAMO,KAAK,GAAGL,KAAK,CAACG,MAAN,CAAaG,SAAb,CACTC,UAAD,IAAgBA,UAAU,CAACC,EAAX,KAAkBP,MAAM,CAACO,EAD/B,CAAd;AAIA,UAAIC,SAAS,GAAG,CAAC,GAAGT,KAAK,CAACG,MAAV,CAAhB;;AAEA,UAAIE,KAAK,IAAI,CAAb,EAAgB;AACZI,QAAAA,SAAS,CAACC,MAAV,CAAiBL,KAAjB,EAAwB,CAAxB;AACH,OAFD,MAEO;AACHM,QAAAA,OAAO,CAACC,IAAR,CACK,4BAA2BX,MAAM,CAACO,EAAG,6BAD1C;AAGH;;AAED,aAAO,EACH,GAAGR,KADA;AAEHG,QAAAA,MAAM,EAAEM;AAFL,OAAP;;AAML;AACP;AACA;AACA;;AAEQ,SAAKZ,OAAL;AACI,aAAO,EACH,GAAGG,KADA;AAEHG,QAAAA,MAAM,EAAEH,KAAK,CAACG,MAAN,CAAaU,GAAb,CAAiBC,IAAI,IAAKA,IAAI,CAACN,EAAL,KAAYP,MAAM,CAACG,OAAnB,GAA4B,EAAC,GAAGU,IAAJ;AAAUC,UAAAA,GAAG,EAAED,IAAI,CAACC,GAAL,GAAW;AAA1B,SAA5B,GAA2D,EAAC,GAAGD;AAAJ,SAArF;AAFL,OAAP;;AAIJ,SAAKlB,OAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHG,QAAAA,MAAM,EAAEH,KAAK,CAACG,MAAN,CAAaU,GAAb,CAAiBC,IAAI,IAAIA,IAAI,CAACN,EAAL,KAAYP,MAAM,CAACG,OAAnB,GAA6B,EAAE,GAAGU,IAAL;AAAWC,UAAAA,GAAG,EAAED,IAAI,CAACC,GAAL,GAAW;AAA3B,SAA7B,GAA8D,EAAE,GAAGD;AAAL,SAAvF;AAFL,OAAP;;AAMJ;AACI,aAAOd,KAAP;AA/CR;AAkDH,CAnDM;AAqDP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { ADD_T0_CART, DEC_QTY, INC_QTY, REMOVE_FROM_CART,} from \"./commerce-action\";\n\n\n\n\nexport const commerceReducer = (state,action) => {\n    switch (action.type) {\n        case ADD_T0_CART:\n          \n            return {\n                \n                ...state, basket: [...state.basket, action.payload]\n                }\n         \n        case REMOVE_FROM_CART:\n            const index = state.basket.findIndex(\n                (basketItem) => basketItem.id === action.id\n            );\n\n            let newBasket = [...state.basket];\n\n            if (index >= 0) {\n                newBasket.splice(index, 1);\n            } else {\n                console.warn(\n                    `Can't remove product(id: ${action.id}) as its not in the basket!`\n                )\n            }\n\n            return {\n                ...state,\n                basket: newBasket\n            }\n\n            \n       /*     return {\n                ...state,\n                basket: state.basket.filter( item => item.id !== action.payload)\n            } */\n            \n        case INC_QTY:\n            return {\n                ...state,\n                basket: state.basket.map(item =>  item.id === action.payload? {...item, qty: item.qty + 1} : {...item} )\n            }\n        case DEC_QTY:\n            return {\n                ...state,\n                basket: state.basket.map(item => item.id === action.payload ? { ...item, qty: item.qty - 1 } : { ...item })\n            }\n\n       \n        default:\n            return state\n    }\n\n}\n\n/* \n            let newBasket = [...state.basket]\n\n            if (index > 0) {\n                newBasket.splice(index,1)\n \n            }\n            else {\n                alert(\"can't remove product\")\n            } \n            \n            \n             ...state,\n                basket: state.basket.filter(item => item.id !== action.payload)*/"]},"metadata":{},"sourceType":"module"}