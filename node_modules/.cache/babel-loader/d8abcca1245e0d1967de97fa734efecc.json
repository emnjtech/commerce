{"ast":null,"code":"import { ADD_T0_CART, REMOVE_FROM_CART } from \"./commerce-action\";\nexport const commerceReducer = (state, action) => {\n  switch (action.type) {\n    case ADD_T0_CART:\n      return { ...state,\n        basket: [...state.basket, action.payload]\n      };\n\n    case REMOVE_FROM_CART:\n      const index = state.basket.findIndex(basketItem => basketItem.id === action.payload);\n      let newBasket = [...state.basket];\n\n      if (index > 0) {\n        newBasket.splice(index, 1);\n      } else {\n        alert(\"can't remove product\");\n      }\n\n      return { ...state,\n        basket: newBasket\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/admin/reactProject/my-app/src/context/commerce-reducer.js"],"names":["ADD_T0_CART","REMOVE_FROM_CART","commerceReducer","state","action","type","basket","payload","index","findIndex","basketItem","id","newBasket","splice","alert"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,mBAA9C;AAKA,OAAO,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAkB;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKL,WAAL;AACI,aAAO,EACH,GAAGG,KADA;AACOG,QAAAA,MAAM,EAAE,CAAC,GAAGH,KAAK,CAACG,MAAV,EAAkBF,MAAM,CAACG,OAAzB;AADf,OAAP;;AAGJ,SAAKN,gBAAL;AACI,YAAMO,KAAK,GAAGL,KAAK,CAACG,MAAN,CAAaG,SAAb,CACVC,UAAU,IAAIA,UAAU,CAACC,EAAX,KAAkBP,MAAM,CAACG,OAD7B,CAAd;AAEA,UAAIK,SAAS,GAAG,CAAC,GAAGT,KAAK,CAACG,MAAV,CAAhB;;AAEA,UAAIE,KAAK,GAAG,CAAZ,EAAe;AACXI,QAAAA,SAAS,CAACC,MAAV,CAAiBL,KAAjB,EAAuB,CAAvB;AAEH,OAHD,MAIK;AACDM,QAAAA,KAAK,CAAC,sBAAD,CAAL;AACH;;AAED,aAAO,EACH,GAAGX,KADA;AAEHG,QAAAA,MAAM,EAAEM;AAFL,OAAP;;AAKJ;AACI,aAAOT,KAAP;AAxBR;AA2BH,CA5BM","sourcesContent":["import { ADD_T0_CART, REMOVE_FROM_CART,} from \"./commerce-action\";\n\n\n\n\nexport const commerceReducer = (state,action) => {\n    switch (action.type) {\n        case ADD_T0_CART:\n            return {\n                ...state, basket: [...state.basket, action.payload]\n            }\n        case REMOVE_FROM_CART:\n            const index = state.basket.findIndex(\n                basketItem => basketItem.id === action.payload)\n            let newBasket = [...state.basket]\n\n            if (index > 0) {\n                newBasket.splice(index,1)\n \n            }\n            else {\n                alert(\"can't remove product\")\n            }\n            \n            return {\n                ...state,\n                basket: newBasket\n            }\n       \n        default:\n            return state\n    }\n\n}"]},"metadata":{},"sourceType":"module"}