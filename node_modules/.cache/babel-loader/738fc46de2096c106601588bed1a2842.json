{"ast":null,"code":"import { ADD_T0_CART, REMOVE_FROM_CART } from \"./commerce-action\";\nexport const commerceReducer = (state, action) => {\n  switch (action.type) {\n    case ADD_T0_CART:\n      return { ...state,\n        basket: [...state.basket, action.payload]\n      };\n\n    case REMOVE_FROM_CART:\n      return { ...state,\n        basket: state.basket.filter(item => item.id !== action.payload)\n      };\n\n    case AMOUNT:\n      const sum = state.basket.reduce((accumulator, object) => {\n        return accumulator + object.price;\n      }, 0);\n      return { ...state,\n        basket: sum()\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/admin/reactProject/my-app/src/context/commerce-reducer.js"],"names":["ADD_T0_CART","REMOVE_FROM_CART","commerceReducer","state","action","type","basket","payload","filter","item","id","AMOUNT","sum","reduce","accumulator","object","price"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,mBAA9C;AAKA,OAAO,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAkB;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKL,WAAL;AACI,aAAO,EACH,GAAGG,KADA;AACOG,QAAAA,MAAM,EAAE,CAAC,GAAGH,KAAK,CAACG,MAAV,EAAkBF,MAAM,CAACG,OAAzB;AADf,OAAP;;AAGJ,SAAKN,gBAAL;AACI,aAAO,EACH,GAAGE,KADA;AAEHG,QAAAA,MAAM,EAAEH,KAAK,CAACG,MAAN,CAAaE,MAAb,CAAoBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYN,MAAM,CAACG,OAA/C;AAFL,OAAP;;AAIJ,SAAKI,MAAL;AACI,YAAMC,GAAG,GAAGT,KAAK,CAACG,MAAN,CAAaO,MAAb,CAAoB,CAACC,WAAD,EAAcC,MAAd,KAAyB;AACrD,eAAOD,WAAW,GAAGC,MAAM,CAACC,KAA5B;AACH,OAFW,EAET,CAFS,CAAZ;AAGA,aAAO,EACH,GAAGb,KADA;AAEHG,QAAAA,MAAM,EAAEM,GAAG;AAFR,OAAP;;AAIJ;AACI,aAAOT,KAAP;AAnBR;AAsBH,CAvBM","sourcesContent":["import { ADD_T0_CART, REMOVE_FROM_CART } from \"./commerce-action\";\n\n\n\n\nexport const commerceReducer = (state,action) => {\n    switch (action.type) {\n        case ADD_T0_CART:\n            return {\n                ...state, basket: [...state.basket, action.payload]\n            }\n        case REMOVE_FROM_CART:\n            return {\n                ...state,\n                basket: state.basket.filter(item => item.id !== action.payload)\n            }\n        case AMOUNT:\n            const sum = state.basket.reduce((accumulator, object) => {\n                return accumulator + object.price;\n            }, 0);\n            return {\n                ...state,\n                basket: sum()\n            }\n        default:\n            return state\n    }\n\n}"]},"metadata":{},"sourceType":"module"}